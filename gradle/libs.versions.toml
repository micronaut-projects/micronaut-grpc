[versions]
managed-grpc = '1.59.1'
managed-protobuf = '3.25.2'
managed-protobuf-gradle = '0.9.4'
managed-grpc-kotlin = '1.4.1'

jackson-datatype-protobuf = '0.9.14'
jaeger-core = '1.8.1'
opentracing-grpc = '0.2.3'
opentracing-mock = '0.33.0'
graal-svm = '23.1.2'
groovy = '4.0.15'
javax-annotation-api = '1.3.2'
kotlin = '1.9.22'
spock = '2.3-groovy-4.0'

micronaut = '4.2.3'
micronaut-platform = '4.2.0'
micronaut-docs = '2.0.0'
micronaut-gradle-plugin = '4.2.1'
micronaut-discovery-client = '4.1.0'
micronaut-reactor = '3.2.1'
micronaut-tracing = '6.2.0'
micronaut-tracing-legacy = '3.2.7'
micronaut-validation = '4.2.0'
micronaut-kotlin = '4.1.0'
micronaut-logging = '1.2.1'
micronaut-test = '4.2.0'

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }
micronaut-docs-asciidoc-config-props = { module = 'io.micronaut.docs:micronaut-docs-asciidoc-config-props', version.ref = 'micronaut-docs' }
micronaut-tracing-legacy = { module = 'io.micronaut:micronaut-tracing', version.ref = 'micronaut-tracing-legacy' }
micronaut-reactor = { module = 'io.micronaut.reactor:micronaut-reactor-bom', version.ref = 'micronaut-reactor' }
micronaut-tracing = { module = 'io.micronaut.tracing:micronaut-tracing-bom', version.ref = 'micronaut-tracing' }
micronaut-discovery-client = { module = "io.micronaut.discovery:micronaut-discovery-client", version.ref = "micronaut-discovery-client" }
micronaut-validation = { module = 'io.micronaut.validation:micronaut-validation-bom', version.ref = 'micronaut-validation' }
micronaut-kotlin = { module = 'io.micronaut.kotlin:micronaut-kotlin-bom', version.ref = 'micronaut-kotlin' }
micronaut-logging = { module = 'io.micronaut.logging:micronaut-logging-bom', version.ref = 'micronaut-logging' }
micronaut-test = { module = 'io.micronaut.test:micronaut-test-bom', version.ref = 'micronaut-test' }

managed-grpc-protobuf = { module = 'io.grpc:grpc-protobuf', version.ref = 'managed-grpc' }
managed-grpc-stub = { module = 'io.grpc:grpc-stub', version.ref = 'managed-grpc' }
managed-grpc-services = { module = 'io.grpc:grpc-services', version.ref = 'managed-grpc' }
managed-protoc-grpc = { module = 'io.grpc:protoc-gen-grpc-java', version.ref = 'managed-grpc' }
managed-grpc-kotlin-stub = { module = 'io.grpc:grpc-kotlin-stub', version.ref = 'managed-grpc-kotlin' }

managed-protobuf-java = { module = 'com.google.protobuf:protobuf-java', version.ref = 'managed-protobuf' }
managed-protobuf-javalite = { module = 'com.google.protobuf:protobuf-javalite', version.ref = 'managed-protobuf' }
managed-protobuf-kotlin = { module = 'com.google.protobuf:protobuf-kotlin', version.ref = 'managed-protobuf' }
managed-protobuf-kotlin-lite = { module = 'com.google.protobuf:protobuf-kotlin-lite', version.ref = 'managed-protobuf' }
managed-protobuf-java-util = { module = 'com.google.protobuf:protobuf-java-util', version.ref = 'managed-protobuf' }
managed-protoc = { module = 'com.google.protobuf:protoc', version.ref = 'managed-protobuf' }

graal-svm = { module = 'org.graalvm.nativeimage:svm', version.ref = 'graal-svm' }
grpc-netty = { module = 'io.grpc:grpc-netty' }

jackson-datatype-protobuf = { module = 'com.hubspot.jackson:jackson-datatype-protobuf', version.ref = 'jackson-datatype-protobuf' }
javax-annotation-api = { module = 'javax.annotation:javax.annotation-api', version.ref = 'javax-annotation-api' }
groovy = {module = 'org.apache.groovy:groovy' }

jaeger-core = { module = 'io.jaegertracing:jaeger-core', version.ref = 'jaeger-core' }

netty-tcnative = { module = 'io.netty:netty-tcnative' }
netty-tcnative-boringssl-static = { module = 'io.netty:netty-tcnative-boringssl-static' }

opentracing-grpc = { module = 'io.opentracing.contrib:opentracing-grpc', version.ref = 'opentracing-grpc' }
opentracing-mock = { module = 'io.opentracing:opentracing-mock', version.ref = 'opentracing-mock' }

jackson-module-kotlin = { module = 'com.fasterxml.jackson.module:jackson-module-kotlin' }
kotlin-stdlib-jdk8 = { module = 'org.jetbrains.kotlin:kotlin-stdlib-jdk8' }
kotlin-reflect = { module = 'org.jetbrains.kotlin:kotlin-reflect' }
kotlinx-coroutines-core = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-core' }

## BOMs
boms-protobuf = { module = 'com.google.protobuf:protobuf-bom', version.ref = 'managed-protobuf' }
boms-grpc = { module = 'io.grpc:grpc-bom', version.ref = 'managed-grpc' }

## plugins
gradle-micronaut = { module = 'io.micronaut.gradle:micronaut-gradle-plugin', version.ref = 'micronaut-gradle-plugin' }
kotlin-gradle-plugin = { module = 'org.jetbrains.kotlin:kotlin-gradle-plugin', version.ref = 'kotlin' }
kotlin-gradle-allopen = { module = 'org.jetbrains.kotlin:kotlin-allopen', version.ref = 'kotlin' }

[plugins]
protobuf = { id = 'com.google.protobuf', version.ref = 'managed-protobuf-gradle' }
