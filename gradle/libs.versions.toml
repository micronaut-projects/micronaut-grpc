[versions]
managed-grpc = '1.45.0'
managed-protobuf = '3.19.4'

jackson-datatype-protobuf = '0.9.12'
jaeger-core = '1.8.0'
opentracing-grpc = '0.2.3'
opentracing-mock = '0.33.0'

[libraries]
managed-grpc-protobuf = { module = 'io.grpc:grpc-protobuf', version.ref = 'managed-grpc' }
managed-grpc-stub = { module = 'io.grpc:grpc-stub', version.ref = 'managed-grpc' }
managed-protobuf-java = { module = 'com.google.protobuf:protobuf-java', version.ref = 'managed-protobuf' }
managed-protobuf-java-util = { module = 'com.google.protobuf:protobuf-java-util', version.ref = 'managed-protobuf' }

micronaut-discovery-client = { module = 'io.micronaut.discovery:micronaut-discovery-client' }
micronaut-http = { module = 'io.micronaut:micronaut-http' }
micronaut-http-netty = { module = 'io.micronaut:micronaut-http-netty' }
micronaut-buffer-netty = { module = 'io.micronaut:micronaut-buffer-netty' }
micronaut-http-server-netty = { module = 'io.micronaut:micronaut-http-server-netty' }
micronaut-inject-java = { module = 'io.micronaut:micronaut-inject-java' }
micronaut-management = { module = 'io.micronaut:micronaut-management' }
micronaut-reactor-http-client = { module = 'io.micronaut.reactor:micronaut-reactor-http-client' }
micronaut-runtime = { module = 'io.micronaut:micronaut-runtime' }
micronaut-tracing = { module = 'io.micronaut:micronaut-tracing' }
micronaut-validation = { module = 'io.micronaut:micronaut-validation' }

graal = { module = "org.graalvm.nativeimage:svm" }

grpc-netty = { module = 'io.grpc:grpc-netty', version.ref = 'managed-grpc' }

jackson-datatype-protobuf = { module = 'com.hubspot.jackson:jackson-datatype-protobuf', version.ref = 'jackson-datatype-protobuf' }

jaeger-core = { module = 'io.jaegertracing:jaeger-core', version.ref = 'jaeger-core' }

logback-classic = { module = 'ch.qos.logback:logback-classic'}

netty-tcnative = { module = 'io.netty:netty-tcnative' }
netty-tcnative-boringssl-static = { module = 'io.netty:netty-tcnative-boringssl-static' }

opentracing-grpc = { module = 'io.opentracing.contrib:opentracing-grpc', version.ref = 'opentracing-grpc' }
opentracing-mock = { module = 'io.opentracing:opentracing-mock', version.ref = 'opentracing-mock' }

projectreactor = { module = 'io.projectreactor:reactor-core' }

protoc = { module = 'com.google.protobuf:protoc', version.ref = 'managed-protobuf' }
protoc-grpc = { module = 'io.grpc:protoc-gen-grpc-java', version.ref = 'managed-grpc' }