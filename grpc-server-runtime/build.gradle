plugins {
    id 'io.micronaut.build.internal.grpc-module'
    alias libs.plugins.protobuf
}

dependencies {

    api platform(libs.boms.grpc)
    api projects.grpcAnnotation
    api projects.grpcHealth
    api projects.grpcOpentracing
    api mn.micronaut.runtime
    api libs.managed.grpc.protobuf
    api libs.managed.grpc.stub

    compileOnly libs.managed.grpc.services
    compileOnly mn.micronaut.discovery
    compileOnly mn.micronaut.management
    compileOnly mn.graal

    implementation libs.grpc.netty
    implementation mn.micronaut.buffer.netty

    testImplementation libs.managed.grpc.services
    testImplementation mn.micronaut.discovery
    testImplementation mn.micronaut.reactor.http.client
    testImplementation mn.micronaut.management
    testImplementation projects.grpcClientRuntime

    testRuntimeOnly libs.netty.tcnative
    testRuntimeOnly libs.netty.tcnative.boringssl.static
}

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = libs.managed.protoc.asProvider().get() }
    plugins {
        grpc { artifact = libs.managed.protoc.grpc.get() }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

micronautBuild {
    binaryCompatibility {
        acceptedRegressionsFile = file("config/accepted-api-changes.json")
    }
}
