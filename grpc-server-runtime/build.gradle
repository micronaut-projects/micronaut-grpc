plugins {
    id 'io.micronaut.build.internal.grpc-module'
    alias libs.plugins.protobuf
}

dependencies {

    api platform(libs.boms.grpc)
    api projects.micronautGrpcAnnotation
    api projects.micronautGrpcHealth
    api projects.micronautGrpcOpentracing
    api libs.managed.grpc.core
    api libs.managed.grpc.protobuf
    api libs.managed.grpc.stub

    compileOnly libs.managed.grpc.services
    compileOnly mn.micronaut.management
    compileOnly libs.graal.svm

    implementation libs.grpc.netty
    implementation mn.micronaut.buffer.netty
    implementation mn.micronaut.discovery.core

    testCompileOnly libs.javax.annotation.api

    testImplementation libs.managed.grpc.services
    testImplementation mn.micronaut.discovery.core
    testImplementation mnReactor.micronaut.reactor.http.client
    testImplementation mn.micronaut.management
    testImplementation projects.micronautGrpcClientRuntime

    testRuntimeOnly libs.netty.tcnative.boringssl.static
}

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = libs.managed.protoc.asProvider().get() }
    plugins {
        grpc { artifact = libs.managed.protoc.grpc.get() }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

micronautBuild {
    binaryCompatibility {
        acceptedRegressionsFile = file("config/accepted-api-changes.json")
    }
}
