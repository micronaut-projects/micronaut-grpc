plugins {
    id 'io.micronaut.build.internal.grpc-module'
    id 'com.google.protobuf'
}

dependencies {
    api project(":grpc-annotation")
    api libs.micronaut.runtime
    api libs.managed.grpc.protobuf
    api libs.managed.grpc.stub

    compileOnly libs.managed.grpc.services
    implementation libs.grpc.netty
    implementation libs.micronaut.buffer.netty
    compileOnly libs.micronaut.discovery.client
    compileOnly libs.micronaut.tracing
    compileOnly libs.micronaut.management
    compileOnly libs.opentracing.grpc
    compileOnly libs.graal

    testImplementation libs.managed.grpc.services
    testImplementation libs.micronaut.discovery.client
    testImplementation libs.opentracing.mock
    testImplementation libs.micronaut.tracing
    testImplementation libs.opentracing.grpc
    testImplementation libs.jaeger.core
    testImplementation libs.micronaut.reactor.http.client
    testImplementation libs.micronaut.management
    testImplementation project(":grpc-client-runtime")

    testRuntimeOnly libs.netty.tcnative
    testRuntimeOnly libs.netty.tcnative.boringssl.static
}

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = libs.protoc.asProvider().get() }
    plugins {
        grpc { artifact = libs.protoc.grpc.get() }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}