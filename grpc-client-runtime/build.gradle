plugins {
    id 'io.micronaut.build.internal.grpc-module'
    id 'com.google.protobuf'
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    api project(":grpc-annotation")
    api "io.micronaut:micronaut-inject"
    api "io.micronaut:micronaut-runtime"
    api "io.grpc:grpc-protobuf:$grpcVersion"
    api "io.grpc:grpc-stub:$grpcVersion"

    implementation "io.grpc:grpc-netty:$grpcVersion"
    implementation "io.projectreactor:reactor-core"
    implementation "jakarta.inject:jakarta.inject-api"

    compileOnly "io.micronaut:micronaut-inject-java"
    compileOnly "io.micronaut.discovery:micronaut-discovery-client"
    compileOnly "io.micronaut:micronaut-tracing"
    compileOnly "io.opentracing.contrib:opentracing-grpc:0.2.3"

    testImplementation "io.micronaut.discovery:micronaut-discovery-client"
    testImplementation "io.opentracing:opentracing-mock:0.33.0"
    testImplementation "io.micronaut:micronaut-tracing"
    testImplementation "io.opentracing.contrib:opentracing-grpc:0.2.3"
    testImplementation "io.jaegertracing:jaeger-core:1.7.0"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut:micronaut-inject-java"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation project(":grpc-server-runtime")
}

// compileJava.options.fork=true
// compileJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protobufJavaVersion" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}