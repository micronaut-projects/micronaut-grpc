plugins {
    id 'groovy'
    id 'com.google.protobuf' version '0.8.17'
    id 'io.micronaut.application' version '2.0.6'
}

ext {
    micronautVersion = '3.1.1'
    protobufJavaVersion = '3.17.2'
    grpcVersion = '1.39.0'
}

repositories {
    mavenCentral()
}

mainClassName = "helloworld.Application"
micronaut {
    version micronautVersion
    testRuntime "spock"
    enableNativeImage false
    processing {
        incremental(true)
        annotations("helloworld.*")
    }
}

dependencies {

    compileOnly "io.grpc:grpc-stub:$grpcVersion"

    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut.grpc:micronaut-grpc-server-runtime"
    implementation "io.micronaut.discovery:micronaut-discovery-client"

    runtimeOnly "ch.qos.logback:logback-classic"
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

tasks.withType(org.gradle.jvm.tasks.Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

sourceSets {
    main {
        groovy {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protobufJavaVersion" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
